Description: Create Full Stack Template

Parameters:
  CodeCommitMLRepository:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Name of the repo which contains Source code.
    Default: CodeCommitMLRepository
  ArtifactsBucketLocation:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Name of the S3 bucket to store CodePipeline artifact.
    Default: ArtifactsBucketLocation
  MLInputBucket:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Name of the S3 bucket to store ML Input.
    Default: MLInputBucket
  MLOutputBucket:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Name of the S3 bucket to store ML Output.
    Default: MLOutputBucket
  Filename:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Name of the YAML file
    Default: Filename
  SNSTopic:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Name of the YAML file
    Default: SNSTopic
  UserArn:
    Type: AWS::SSM::Parameter::Value<String>
    Description: UserArn for ECR
    Default: UserArn
  VpcId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::VPC>
    Description: VPC id for Sagemaker
    Default: VpcId
  SubnetId:
    Type: AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet>>
    Description: Subnet ID Sagemaker
    Default: SubnetId

Resources:

# Bucket for Artifacts

  S3Bucket1:
    #DeletionPolicy: Retain
    Type: AWS::S3::Bucket
    Description: Creating Amazon S3 bucket as Source Code Repository 
    Properties:
      #BucketName: !Ref ArtifactsBucketLocation
      BucketName: 
         !Join
           - '-'
           - - !Ref ArtifactsBucketLocation
             - !Ref AWS::StackName
             - !Ref AWS::AccountId
             - !Ref AWS::Region
      AccessControl: Private
      #LifecycleConfiguration:
        #Rules:
          #- Id: GlacierRule
            #Prefix: glacier
            #Status: Enabled
            #ExpirationInDays: 365
            #Transitions:
              #- TransitionInDays: 1
                #StorageClass: GLACIER

# Bucket for Machine Learning Input

  S3Bucket2:
    #DeletionPolicy: Retain
    Type: AWS::S3::Bucket
    Description: ML Bucket for input 
    Properties:
      BucketName: 
         !Join
           - '-'
           - - !Ref MLInputBucket
             - !Ref AWS::StackName
             - !Ref AWS::AccountId
             - !Ref AWS::Region
      AccessControl: Private

# Bucket for Machine Learning Output

  S3Bucket3:
    #DeletionPolicy: Retain
    Type: AWS::S3::Bucket
    Description: ML Bucket for output 
    Properties:
      BucketName: 
         !Join
           - '-'
           - - !Ref MLOutputBucket
             - !Ref AWS::StackName
             - !Ref AWS::AccountId
             - !Ref AWS::Region
      AccessControl: Private

# Code Build Role for Build Project (Access to services)

  CodeBuildRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName:
        Fn::Sub: CodeBuildRole-${AWS::StackName} 
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement: 
          - Effect: "Allow"
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - 'sts:AssumeRole'
      Path: /service-role/
      Policies:
        - PolicyName: "CodeBuildCICDAccessPolicy"
          PolicyDocument:
            Version: "2012-10-17" 
            Statement:
              - Effect: "Allow"
                Action:
                  - "codecommit:GitPull"
                Resource:
                  - Fn::Sub: arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${CodeCommitMLRepository}
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
              - Effect: "Allow"
                Action:
                  - "s3:PutObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:ListBucket"
                  - s3:*
                Resource:
                  - Fn::Sub: arn:aws:s3:::codepipeline-${AWS::Region}-*
                  - Fn::Sub: arn:aws:s3:::${S3Bucket1}/*
                  - Fn::Sub: arn:aws:s3:::${S3Bucket1}
                  - Fn::Sub: arn:aws:s3:::*
              - Effect: Allow
                Action:
                  - iam:ListPolicies
                  - iam:GenerateCredentialReport
                  - iam:GetAccountPasswordPolicy
                  - iam:DeleteAccountPasswordPolicy
                  - iam:ListSAMLProviders
                  - iam:GetServiceLastAccessedDetailsWithEntities
                  - iam:ListServerCertificates
                  - iam:ListRoles
                  - iam:GetServiceLastAccessedDetails
                  - iam:ListVirtualMFADevices
                  - iam:GetOrganizationsAccessReport
                  - iam:SetSecurityTokenServicePreferences
                  - iam:GetContextKeysForCustomPolicy
                  - iam:SimulateCustomPolicy
                  - iam:UpdateAccountPasswordPolicy
                  - iam:ListOpenIDConnectProviders
                  - iam:CreateAccountAlias
                  - iam:ListAccountAliases
                  - iam:ListUsers
                  - iam:ListGroups
                  - iam:GetAccountAuthorizationDetails
                  - iam:DeleteAccountAlias
                  - iam:GetCredentialReport
                  - iam:GetAccountSummary
                Resource: "*"
              - Effect: Allow
                Action: iam:*
                Resource:
                  - arn:aws:iam::*:policy/*
                  - arn:aws:iam::*:instance-profile/*
                  - arn:aws:iam::*:user/*
                  - arn:aws:iam::*:role/*
                  - arn:aws:iam::*:group/*
              - Effect: Allow
                Action: sagemaker:*
                Resource: "*"

# Build Project for any Builds

  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub BuildProject-${AWS::StackName} 
      Description: Build for ML WHizz
      ServiceRole: !GetAtt [ CodeBuildRole, Arn ]
      Artifacts:
        Type: S3
        Location: !Ref S3Bucket1
        Name: !Sub BuildProject-${AWS::StackName}
      Environment: 
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        EnvironmentVariables:
          - Name: TEST_VARIABLE
            Value: TEST_VALUE
            Type: PLAINTEXT
      Source:
        Location: !Sub https://git-codecommit.${AWS::Region}.amazonaws.com/v1/repos/${CodeCommitMLRepository}
        Type: CODECOMMIT
      TimeoutInMinutes: 15
      Tags:
        - Key: Name 
          Value: !Sub BuildProject-${AWS::StackName}

# Code Deploy role for Code Deploy in Code Pipeline (Access to services)

  CodeDeployServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName:
        Fn::Sub: CodeDeployServiceRole-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "cloudformation.amazonaws.com"
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: "CodeDeployCICDAccessPolicy"
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:DetectStackSetDrift
                  - cloudformation:ImportStacksToStackSet
                  - cloudformation:DeleteStackInstances
                  - cloudformation:DetectStackDrift
                  - cloudformation:CancelUpdateStack
                  - cloudformation:UpdateStackInstances
                  - cloudformation:ListStackSetOperations
                  - cloudformation:ListStackInstances
                  - cloudformation:DescribeChangeSetHooks
                  - cloudformation:RecordHandlerProgress
                  - cloudformation:DescribeStackResource
                  - cloudformation:UpdateStackSet
                  - cloudformation:CreateChangeSet
                  - cloudformation:CreateStackInstances
                  - cloudformation:DeleteChangeSet
                  - cloudformation:ContinueUpdateRollback
                  - cloudformation:ListStackSetOperationResults
                  - cloudformation:DetectStackResourceDrift
                  - cloudformation:DescribeStackEvents
                  - cloudformation:DescribeStackSetOperation
                  - cloudformation:UpdateStack
                  - cloudformation:StopStackSetOperation
                  - cloudformation:DescribeChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:ListStackResources
                  - cloudformation:SetStackPolicy
                  - cloudformation:DescribeStackInstance
                  - cloudformation:DescribeStackResources
                  - cloudformation:SignalResource
                  - cloudformation:DeleteStackSet
                  - cloudformation:GetTemplateSummary
                  - cloudformation:DescribeStacks
                  - cloudformation:RollbackStack
                  - cloudformation:DescribeStackResourceDrifts
                  - cloudformation:GetStackPolicy
                  - cloudformation:DescribeStackSet
                  - cloudformation:ListStackSets
                  - cloudformation:CreateStack
                  - cloudformation:GetTemplate
                  - cloudformation:DeleteStack
                  - cloudformation:TagResource
                  - cloudformation:UntagResource
                  - cloudformation:ListChangeSets
                Resource:
                  - Fn::Sub: arn:aws:cloudformation:*:${AWS::AccountId}:stack/*/*
              - Effect: Allow
                Action:
                  - cloudformation:RegisterType
                  - cloudformation:CreateUploadBucket
                  - cloudformation:ListExports
                  - cloudformation:DescribeStackDriftDetectionStatus
                  - cloudformation:SetTypeDefaultVersion
                  - cloudformation:RegisterPublisher
                  - cloudformation:ActivateType
                  - cloudformation:ListTypes
                  - cloudformation:DeactivateType
                  - cloudformation:SetTypeConfiguration
                  - cloudformation:DeregisterType
                  - cloudformation:ListTypeRegistrations
                  - cloudformation:EstimateTemplateCost
                  - cloudformation:DescribeAccountLimits
                  - cloudformation:BatchDescribeTypeConfigurations
                  - cloudformation:CreateStackSet
                  - cloudformation:ListStacks
                  - cloudformation:DescribeType
                  - cloudformation:ListImports
                  - cloudformation:PublishType
                  - cloudformation:DescribePublisher
                  - cloudformation:DescribeTypeRegistration
                  - cloudformation:TestType
                  - cloudformation:ValidateTemplate
                  - cloudformation:ListTypeVersions
                Resource: "*"
              #- Effect: "Allow"
                #Action:
                  #- "cloudformation:*"
                #Resource: '*'
              - Effect: "Allow"
                Action:
                  - "codecommit:ListBranches"
                  - "codecommit:ListRepositories"
                  - "codecommit:BatchGetRepositories"
                  - "codecommit:Get*"
                  - "codecommit:GitPull"
                  - "codecommit:UploadArchive"
                  - "codecommit:CreateRepository"
                Resource:
                  - Fn::Sub: arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${CodeCommitMLRepository} 
              - Effect: "Allow"
                Action:
                  - "codebuild:StartBuild"
                  - "codebuild:BatchGetBuilds"
                  - "codebuild:ListReports"
                  - "codebuild:ListProjects"
                  - "codebuild:ListConnectedOAuthAccounts"
                  - codebuild:ListCuratedEnvironmentImages
                  - codebuild:ListBuildBatches
                  - codebuild:ListBuilds
                  - codebuild:DeleteOAuthToken
                  - codebuild:PersistOAuthToken
                  - codebuild:ListReportGroups
                  - codebuild:ImportSourceCredentials
                  - codebuild:ListSourceCredentials
                  - codebuild:ListRepositories
                  - codebuild:ListSharedProjects
                  - codebuild:ListSharedReportGroups
                  - codebuild:DeleteSourceCredentials
                Resource:
                  - Fn::Sub: arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/BuildProject-${AWS::StackName}
                  - Fn::Sub: arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:build/BuildProject-${AWS::StackName}:*
              - Effect: "Allow"
                Action:
                  - "s3:DeleteObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:ListBucket"
                  - "s3:PutObject"
                  - "s3:GetBucketPolicy"
                  - "s3:*"
                Resource:
                  - Fn::Sub: arn:aws:s3:::${S3Bucket1}
                  - Fn::Sub: arn:aws:s3:::${S3Bucket1}/*
              - Effect: "Allow"
                Action:
                  - "sns:*"
                Resource: '*'
              - Effect: Allow
                Action:
                  - sagemaker:ListApps
                  - sagemaker:ListArtifacts
                  - sagemaker:ListCandidatesForAutoMLJob
                  - sagemaker:ListModelBiasJobDefinitions
                  - sagemaker:PutLineageGroupPolicy
                  - sagemaker:ListTransformJobs
                  - sagemaker:ListHumanTaskUis
                  - sagemaker:ListMonitoringExecutions
                  - sagemaker:Search
                  - sagemaker:ListDataQualityJobDefinitions
                  - sagemaker:ListTrainingJobs
                  - sagemaker:GetLineageGroupPolicy
                  - sagemaker:ListExperiments
                  - sagemaker:DeleteLineageGroupPolicy
                  - sagemaker:ListSubscribedWorkteams
                  - sagemaker:ListFeatureGroups
                  - sagemaker:ListLineageGroups
                  - sagemaker:ListAlgorithms
                  - sagemaker:ListNotebookInstanceLifecycleConfigs
                  - sagemaker:ListDeviceFleets
                  - sagemaker:ListCompilationJobs
                  - sagemaker:ListTrials
                  - sagemaker:ListEndpointConfigs
                  - sagemaker:ListActions
                  - sagemaker:ListStudioLifecycleConfigs
                  - sagemaker:RenderUiTemplate
                  - sagemaker:ListModelExplainabilityJobDefinitions
                  - sagemaker:ListDomains
                  - sagemaker:ListEdgePackagingJobs
                  - sagemaker:ListModelMetadata
                  - sagemaker:ListUserProfiles
                  - sagemaker:ListAppImageConfigs
                  - sagemaker:ListWorkteams
                  - sagemaker:EnableSagemakerServicecatalogPortfolio
                  - sagemaker:GetSagemakerServicecatalogPortfolioStatus
                  - sagemaker:DisableSagemakerServicecatalogPortfolio
                  - sagemaker:ListProjects
                  - sagemaker:ListContexts
                  - sagemaker:DescribeLineageGroup
                  - sagemaker:ListAutoMLJobs
                  - sagemaker:ListHumanLoops
                  - sagemaker:ListMonitoringSchedules
                  - sagemaker:ListProcessingJobs
                  - sagemaker:QueryLineage
                  - sagemaker:ListAssociations
                  - sagemaker:ListModelPackageGroups
                  - sagemaker:ListImages
                  - sagemaker:ListDevices
                  - sagemaker:ListInferenceRecommendationsJobs
                  - sagemaker:CreateLineageGroupPolicy
                  - sagemaker:ListModelQualityJobDefinitions
                  - sagemaker:ListNotebookInstances
                  - sagemaker:ListFlowDefinitions
                  - sagemaker:ListTrialComponents
                  - sagemaker:ListHyperParameterTuningJobs
                  - sagemaker:ListLabelingJobs
                  - sagemaker:ListWorkforces
                  - sagemaker:GetSearchSuggestions
                  - sagemaker:ListPipelines
                  - sagemaker:ListModels
                  - sagemaker:ListEndpoints
                  - sagemaker:ListCodeRepositories
                Resource: "*"
              - Effect: Allow
                Action:
                  - sagemaker:*
                  - codebuild:*
                Resource:
                  - arn:aws:sagemaker:*:*:code-repository/*
                  - arn:aws:sagemaker:*:*:project/*
                  - arn:aws:sagemaker:*:*:feature-group/*
                  - arn:aws:sagemaker:*:*:transform-job/*
                  - arn:aws:sagemaker:*:*:user-profile/*/*
                  - arn:aws:sagemaker:*:*:artifact/*
                  - arn:aws:sagemaker:*:*:endpoint-config/*
                  - arn:aws:sagemaker:*:*:training-job/*
                  - arn:aws:sagemaker:*:*:studio-lifecycle-config/*
                  - arn:aws:sagemaker:*:*:pipeline/*/execution/*
                  - arn:aws:sagemaker:*:*:image/*
                  - arn:aws:codebuild:*:*:project/*
                  - arn:aws:sagemaker:*:*:notebook-instance-lifecycle-config/*
                  - arn:aws:sagemaker:*:*:notebook-instance/*,
              - Effect: Allow
                Action: sagemaker:*
                Resource:
                  - arn:aws:sagemaker:*:*:notebook-instance-lifecycle-config/*
                  - arn:aws:sagemaker:*:*:notebook-instance/*
                  - arn:aws:sagemaker:*:*:processing-job/*
                  - arn:aws:sagemaker:*:*:endpoint/*
                  - arn:aws:sagemaker:*:*:domain/*
                  - arn:aws:sagemaker:*:*:pipeline/*
                  - arn:aws:sagemaker:*:*:image-version/*/*
                  - arn:aws:sagemaker:*:*:hyper-parameter-tuning-job/*
              - Effect: Allow
                Action:
                  - iam:ListPolicies
                  - iam:GenerateCredentialReport
                  - iam:GetAccountPasswordPolicy
                  - iam:DeleteAccountPasswordPolicy
                  - iam:ListSAMLProviders
                  - iam:GetServiceLastAccessedDetailsWithEntities
                  - iam:ListServerCertificates
                  - iam:ListRoles
                  - iam:GetServiceLastAccessedDetails
                  - iam:ListVirtualMFADevices
                  - iam:GetOrganizationsAccessReport
                  - iam:SetSecurityTokenServicePreferences
                  - iam:GetContextKeysForCustomPolicy
                  - iam:SimulateCustomPolicy
                  - iam:UpdateAccountPasswordPolicy
                  - iam:ListOpenIDConnectProviders
                  - iam:CreateAccountAlias
                  - iam:ListAccountAliases
                  - iam:ListUsers
                  - iam:ListGroups
                  - iam:GetAccountAuthorizationDetails
                  - iam:DeleteAccountAlias
                  - iam:GetCredentialReport
                  - iam:GetAccountSummary
                Resource: "*"
              - Effect: Allow
                Action: iam:*
                Resource:
                  - arn:aws:iam::*:policy/*
                  - arn:aws:iam::*:instance-profile/*
                  - arn:aws:iam::*:user/*
                  - arn:aws:iam::*:role/*
                  - arn:aws:iam::*:group/*
              - Effect: Allow
                Action: ecr:*
                Resource: "*"
              - Effect: Allow
                Action: codepipeline:*
                Resource: "*"
              - Effect: Allow
                Action: cloudformation:UpdateTerminationProtection
                Resource: arn:aws:cloudformation:*:*:stack/*/*
              - Effect: Allow
                Action: ec2:*
                Resource: "*"
              - Effect: Allow
                Action:
                  - ssm:PutParameter
                  - ssm:DeleteParameter
                  - ssm:RemoveTagsFromResource
                  - ssm:GetParameterHistory
                  - ssm:AddTagsToResource
                  - ssm:GetParametersByPath
                  - ssm:GetParameters
                  - ssm:GetParameter
                  - ssm:DeleteParameters
                  - ssm:*
                Resource: arn:aws:ssm:*:*:parameter/*
              - Effect: Allow
                Action: ssm:DescribeParameters
                Resource: "*"

# Code Pipeline role for Code Pipeline run (Access to services)

  CodePipelineRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName:
        Fn::Sub: CodePipelineRole-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: "CodePipelineCICDAccessPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "cloudformation:*"
                Resource: '*'
              - Effect: "Allow"
                Action:
                  - "s3:DeleteObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:ListBucket"
                  - "s3:PutObject"
                  - "s3:GetBucketPolicy"
                  - "s3:*"
                Resource:
                  - Fn::Sub: arn:aws:s3:::${S3Bucket1}
                  - Fn::Sub: arn:aws:s3:::${S3Bucket1}/*
              - Effect: "Allow"
                Action:
                  - "sns:*"
                Resource: '*'
              - Effect: "Allow"
                Action:
                  - "codecommit:ListBranches"
                  - "codecommit:ListRepositories"
                  - "codecommit:BatchGetRepositories"
                  - "codecommit:Get*"
                  - "codecommit:GitPull"
                  - "codecommit:UploadArchive" 
                  - "codecommit:*"
                Resource:
                  - Fn::Sub: arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${CodeCommitMLRepository}
              - Effect: Allow
                Action:
                  - "cloudformation:*"
                Resource: '*'
              - Effect: "Allow"
                Action:
                  - "codebuild:StartBuild"
                  - "codebuild:BatchGetBuilds"
                Resource:
                  - Fn::Sub: arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/BuildProject-${AWS::StackName}
                  - Fn::Sub: arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:build/BuildProject-${AWS::StackName}:*
              - Effect: Allow
                Action:
                  - 'codedeploy:CreateDeployment'
                  - 'codedeploy:GetApplicationRevision'
                  - 'codedeploy:GetDeployment'
                  - 'codedeploy:GetDeploymentConfig'
                  - 'codedeploy:RegisterApplicationRevision'
                Resource: '*'
              - Effect: Allow
                Action:
                  - "iam:ListPolicies"
                  - "iam:GenerateCredentialReport"
                  - "iam:GetAccountPasswordPolicy"
                  - "iam:DeleteAccountPasswordPolicy"
                  - "iam:ListSAMLProviders"
                  - "iam:GetServiceLastAccessedDetailsWithEntities"
                  - "iam:ListServerCertificates"
                  - "iam:ListRoles"
                  - "iam:GetServiceLastAccessedDetails"
                  - "iam:ListVirtualMFADevices"
                  - "iam:GetOrganizationsAccessReport"
                  - "iam:SetSecurityTokenServicePreferences"
                  - "iam:GetContextKeysForCustomPolicy"
                  - "iam:SimulateCustomPolicy"
                  - "iam:UpdateAccountPasswordPolicy"
                  - "iam:ListOpenIDConnectProviders"
                  - "iam:CreateAccountAlias"
                  - "iam:ListAccountAliases"
                  - "iam:ListUsers"
                  - "iam:ListGroups"
                  - "iam:GetAccountAuthorizationDetails"
                  - "iam:DeleteAccountAlias"
                  - "iam:GetCredentialReport"
                  - "iam:GetAccountSummary"
                Resource: "*"
              - Effect: Allow
                Action: iam:*
                Resource:
                  - arn:aws:iam::*:policy/*
                  - arn:aws:iam::*:instance-profile/*
                  - arn:aws:iam::*:user/*
                  - arn:aws:iam::*:role/*
                  - arn:aws:iam::*:group/*
              - Effect: Allow
                Action: ec2:*
                Resource: "*"

# Deploy Stage in Code Pipeline

  DeployPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub CI-CD-Pipeline-${AWS::StackName}
      RoleArn: !GetAtt [CodePipelineRole, Arn]
      Stages:
        - Name: Source
          Actions:
            - Name: CodeCommitInputSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeCommit
              OutputArtifacts:
                - Name: CodeCommitOutput
              Configuration:
                BranchName: main
                RepositoryName: !Ref CodeCommitMLRepository
              RunOrder: 1                                                                    
        - Name: Build
          Actions:
            - Name: CodeBuild
              InputArtifacts:
                - Name: CodeCommitOutput
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              RunOrder: 1
              Configuration:
                ProjectName: !Ref BuildProject
              OutputArtifacts:
                - Name: CodeBuildOutput
        - Name: ApprovalStage
          Actions:
            - Name: ApprovalAction
              #InputArtifacts:
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: 1
                Provider: Manual
              Configuration:
                NotificationArn:
                  Fn::Sub: arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${SNSTopic}
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: CodeDeploy
              InputArtifacts:
                - Name: CodeCommitOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !GetAtt [CodeDeployServiceRole, Arn]
                Capabilities: CAPABILITY_NAMED_IAM
                StackName:  
                  Fn::Sub: ${AWS::StackName}
                TemplatePath: 
                  Fn::Join:
                  - '::'
                  - - 'CodeCommitOutput'
                    - !Ref Filename
              RunOrder: 1
      ArtifactStore:
        Type: S3
        Location: !Ref S3Bucket1

# Sagemaker Role to access Sagemaker studio

  SageMakerExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - sagemaker.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSageMakerFullAccess

# Creation of Sagemaker Studio

  SagemakerStudio:
    Type: AWS::SageMaker::Domain
    Properties: 
      AppNetworkAccessType: PublicInternetOnly
      #AppSecurityGroupManagement: String
      AuthMode: IAM
      DefaultUserSettings:
        ExecutionRole: !GetAtt SageMakerExecutionRole.Arn
      DomainName: Sagemaker-CloudFormation
      #DomainSettings: 
        #DomainSettings
      #KmsKeyId: String
      SubnetIds: !Ref SubnetId
      #Tags: 
    #- Tag
      VpcId: !Ref VpcId

# Creation of UserProfile for Sagemaker studio to access Jupyter

  UserProfile:
    Type: AWS::SageMaker::UserProfile
    Properties: 
      DomainId: !GetAtt SagemakerStudio.DomainId
      #SingleSignOnUserIdentifier: String
      #SingleSignOnUserValue: String
      #Tags: 
      #- Tag
      UserProfileName: DataScientist
      #UserSettings: 
      #UserSettings

# Creation of ECR Repository for Docker      

  MyECRRepository: 
    Type: AWS::ECR::Repository
    Properties: 
      RepositoryName: "test-ecrrepository"
      EncryptionConfiguration: 
        EncryptionType: KMS
      RepositoryPolicyText: 
        Version: "2012-10-17"
        Statement: 
          - 
            Sid: AllowPushPull
            Effect: Allow
            Principal: 
              AWS:
                - !Ref UserArn
            Action: 
              - "ecr:GetDownloadUrlForLayer"
              - "ecr:BatchGetImage"
              - "ecr:BatchCheckLayerAvailability"
              - "ecr:PutImage"
              - "ecr:InitiateLayerUpload"
              - "ecr:UploadLayerPart"
              - "ecr:CompleteLayerUpload"