{
    "usecase":"churn",
    "model_given":"No",
    "given_model_type":"sklearn",
    "given_model_path":"s3://inputbucket",
    "sklearn_processor_framework_version":"0.23-1",
    "input_bucket":"mlinput-churn-telecomchurn-852619674999-ap-south-1",
    "output_bucket":"mloutput-churn-telecomchurn-852619674999-ap-south-1",
    "feature_selection_file_name":"Feature_Selection.csv",
    "feature_selection_file_s3_location":"s3://mlinput-churn-telecomchurn-852619674999-ap-south-1/Feature_Selection.csv",
    "target_column":"Churn",
    "processing_code_file_name":"Training_Preprocessing.py",
    "processing_code_file_location":"SageMaker_Pipeline_Component_Codes/Training/Training_Preprocessing.py",
    "processing_instance_type":"ml.m5.4xlarge",
    "processing_instance_count":1,
    "objective_metric":"accuracy",
    "number_of_models":2,
    "model_specifications":{
        "model0":{
            "model_type":"sklearn_model",
            "model_name":"decision_tree",
            "entry_point":"DecisionTree_Training.py",
            "entry_point_location":"SageMaker_Pipeline_Component_Codes/Training/DecisionTree_Training.py",
            "dependencies":"training_requirements.txt",
            "instance_type": "ml.m4.xlarge",
            "hyperparameters":{
                "criterion":{
                    "type":"categorical",
                    "values":["gini", "entropy"]
                },
                "max_depth":{
                    "type":"integer",
                    "min_value":2,
                    "max_value":12
                },
                "min_samples_leaf":{
                    "type":"integer",
                    "min_value":1,
                    "max_value":5
                }
            },
            "tuning_strategy":"Random"
        },
        "model1":{
            "model_type":"sklearn_model",
            "model_name":"logistic_regression",
            "entry_point":"Logistic_Regression_Training.py",
            "entry_point_location":"SageMaker_Pipeline_Component_Codes/Training/Logistic_Regression_Training.py",
            "dependencies":"training_requirements.txt",
            "instance_type": "ml.m4.xlarge",
            "hyperparameters":{
                "penalty":{
                    "type":"categorical",
                    "values":["l1","l2"]
                },
                "C":{
                    "type":"continuous",
                    "min_value":0.001,
                    "max_value":1000.0,
                    "scaling_type":"Logarithmic"
                },
                "solver":{
                    "type":"categorical",
                    "values":["liblinear", "newton-cg", "lbfgs", "sag", "saga"]
                }
            },
            "tuning_strategy":"Random"
        }
    },
    "single_model_evluation_entry_point":"Evaluation.py",
    "single_model_evluation_entry_point_location":"SageMaker_Pipeline_Component_Codes/Training/Evaluation.py",
    "evaluation_instance_type":"ml.m4.xlarge",
    "get_best_model_code_file_name":"Final_Model_Selection.py",
    "get_best_model_code_file_location":"SageMaker_Pipeline_Component_Codes/Training/Final_Model_Selection.py",
    "model_package_group_name":"churn-packagegroup",
    "scoring_data_file_name":"churn-bigml-20.csv",
    "scoring_data_s3_location":"s3://churn-input-bucket-us-east-1/churn-bigml-20.csv",
    "scoring_instance_type":"ml.m5.large",
    "scoring_data":"s3://demo-bucket-test-mlop/Churn_Demo/churn-bigml-20.csv",
    "scoring_preprocessing_instance_type":"ml.m5.xlarge",
    "scoring_preprocessing_instance_count":1,
    "scoring_preprocessing_code_location":"SageMaker_Pipeline_Component_Codes/Scoring/Scoring_Preprocessing.py",
    "scoring_code_location":"SageMaker_Pipeline_Component_Codes/Scoring/inference.py",
    "endpoint_name":"churn-inference-endpoint",
    "endpoint_scoring_code_location":"SageMaker_Pipeline_Component_Codes/Scoring/endpoint/endpoint_inference.py",
    "lambda_code_location":"endpoint_lambda/update_endpoint.py",
    "lambda_function_name":"churn_scoring_endpoint_updater",
    "monitoring_code_file_name":"Monitoring.py"
}